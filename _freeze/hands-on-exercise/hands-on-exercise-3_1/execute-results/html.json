{
  "hash": "a945b2a4939b50a0e0ef2b9cf6547713",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands On Exercise 3.1\"\nformat: html\nauthor: \"Bryan Bramaskara\"\ndate: \"September 11, 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n# 6. Spatio-Temporal Point Patterns Analysis\n\n## **6.1 Overview**\n\nA spatio-temporal point process (also called space-time or spatial-temporal point process) is a random collection of points, where each point represents the time and location of an event. Examples of events include incidence of disease, sightings or births of a species, or the occurrences of fires, earthquakes, lightning strikes, tsunamis, or volcanic eruptions.\n\nThe analysis of spatio-temporal point patterns is becoming increasingly necessary, given the rapid emergence of geographically and temporally indexed data in a wide range of fields. Several spatio-temporal point patterns analysis methods have been introduced and implemented in R in the last ten years. This chapter shows how various R packages can be combined to run a set of spatio-temporal point pattern analyses in a guided and intuitive way. A real world forest fire events in Kepulauan Bangka Belitung, Indonesia from 1st January 2023 to 31st December 2023 is used to illustrate the methods, procedures and interpretations.\n\n## 6.2 Research Questions\n\nThe specific questions we would like to answer are:\n\n-   are the locations of forest fire in Kepulauan Bangka Belitung spatial and spatio-temporally independent?\n\n-   if the answer is NO, where and when the observed forest fire locations tend to cluster?\n\n## 6.3 The data\n\nFor the purpose of this exercise, two data sets will be used, they are:\n\n-   *forestfires*, a csv file provides locations of forest fire detected from the Moderate Resolution Imaging Spectroradiometer (MODIS) sensor data. The data are downloaded from [Fire Information for Resource Management System](https://firms.modaps.eosdis.nasa.gov/download/). For the purpose of this exercise, only forest fires within Kepulauan Bangka Belitung will be used.\n\n-   *Kepulauan_Bangka_Belitung*, an ESRI shapefile showing the sub-district (i.e.Â [kelurahan](https://en.wikipedia.org/wiki/Villages_of_Indonesia)) boundary of Kepulauan Bangka Belitung. The data set was downloaded from [Indonesia Geospatial](https://www.indonesia-geospasial.com/2023/05/download-shapefile-batas-administrasi.html) portal. The original data covers the whole Indonesia. For the purpose of this exercise, only sub-districts within Kepulauan Bangka Belitung are extracted.\n\n## 6.4 Installing and loading R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse)\n```\n:::\n\n\n## 6.5 Importing and Preparing Study Area\n\n### 6.5.1 Importing study area\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb_sf <- st_read(dsn=\"data/rawdata\",\n               layer = \"Kepulauan_Bangka_Belitung\") %>%\n  st_union() %>%\n  st_zm(drop = TRUE, what = \"ZM\") %>%\n  st_transform(crs = 32748)\n```\n:::\n\n\n### 6.5.2 Converting OWIN\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb_owin <- as.owin(kbb_sf)\nkbb_owin\n\nclass(kbb_owin)\n```\n:::\n\n\n## 6.6 Importing and Preparing Forest Fire data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_sf <- read_csv(\"data/rawdata/modis/modis_2024_Indonesia.csv\") %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"),\n                       crs = 4326) %>%\n  st_transform(crs = 32748)\n```\n:::\n\n\nBecause **ppp** object only accept numerical or character as mark. The code chunk below is used to convert data type of *acq_date* to numeric.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_sf <- fire_sf %>% \n  mutate(DayofYear = yday(acq_date)) %>%\n  mutate(Month_num = month(acq_date)) %>%\n  mutate(Month_fac = month(acq_date, \n                           label = TRUE, \n                           abbr = FALSE))\n```\n:::\n\n\n## 6.7 Visualising the Fire Points\n\n### 6.7.1 Overall plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(kbb_sf) + \n  tm_polygons()\ntm_shape(fire_sf) +\n  tm_dots()\n```\n:::\n\n\n### 6.7.2 Visualising geographic distribution of forest fires by month\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(kbb_sf)+\n  tm_polygons() +\ntm_shape(fire_sf) +\n  tm_dots(size = 0.1) +\ntm_facets(by=\"Month_fac\", \n            free.coords=FALSE, \n            drop.units = TRUE)\n```\n:::\n\n\n## 6.8. Computing STKDE by month\n\n### 6.8.1 Extracting forest fires by month\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month <- fire_sf %>% \n  select(Month_num)\n```\n:::\n\n\n### 6.8.2 Creating ppp\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month_ppp <- as.ppp(fire_month)\nfire_month_ppp\n\nsummary(fire_month_ppp)\n\nany(duplicated(fire_month_ppp))\n```\n:::\n\n\n### 6.8.3 Including Owin Object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month_owin <- fire_month_ppp[kbb_owin]\nsummary(fire_month_owin)\n\nplot(fire_month_owin)\n```\n:::\n\n\n### 6.8.4 Computing Spatio-temporal KDE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_kde <- spattemp.density(fire_month_owin)\nsummary(st_kde)\n```\n:::\n\n\n### 6.8.5 Plotting the spatio-temporal KDE object\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntims <- c(7,8,9,10,11,12)\npar(mfcol=c(2,3))\nfor(i in tims){ \n  plot(st_kde, i, \n       override.par=FALSE, \n       fix.range=TRUE, \n       main=paste(\"KDE at month\",i))\n}\n```\n:::\n\n\n## 6.9 Computing STKDE by Day of Year\n\n### 6.9.1 Creating ppp object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_yday_ppp <- fire_sf %>% \n  select(DayofYear) %>%\n  as.ppp()\n```\n:::\n\n\n### 6.9.2 Including Owin Object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_yday_owin <- fire_yday_ppp[kbb_owin]\nsummary(fire_yday_owin)\n```\n:::\n\n\n### 6.9.3 Spatio-temporal Density Estimate\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_yday <- spattemp.density(\n  fire_yday_owin)\nsummary(kde_yday)\n\nplot(kde_yday)\n```\n:::\n\n\n## 6.10 Computing STKDE by Day of Year: Improved method\n\nOne of the nice function provides in sparr package is `BOOT.spattemp()`. It support bandwidth selection for standalone spatiotemporal density/intensity based on bootstrap estimation of the MISE, providing an isotropic scalar spatial bandwidth and a scalar temporal bandwidth.\n\nCode chunk below uses `BOOT.spattemp()` to determine both the spatial bandwidth and the scalar temporal bandwidth.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nBOOT.spattemp(fire_yday_owin) \n```\n:::\n\n\n### 6.10.1 Computing spatio-temporal KDE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_yday <- spattemp.density(fire_yday_owin,\n                             h = 9000,\n                             lambda = 19)\nsummary(kde_yday)\n```\n:::\n\n\n### 6.10.2 Plotting the output spatio-temporal KDE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(kde_yday)\n```\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}