---
title: "Hands On Exercise 1.1"
format: html
---

# Hands On Exercisee 1.1 - Geospatial Data Science with R

## 1.1 Data Used & Installing Packages

-   Master Plan 2014 Subzone Boundary (Web) from [data.gov.sg](data.gov.sg)

-   Pre-Schools Location from [data.gov.sg](data.gov.sg)

-   Cycling Path from [LTADataMall](https://datamall.lta.gov.sg/content/datamall/en.html)

-   Latest version of Singapore Airbnb listing data from Inside [Airbnb](https://insideairbnb.com/get-the-data/)

::: callout-note
Tidyverse consists of a family of R packages. In this hands-on exercise, the following packages will be used:

-   **readr** for importing csv data,

-   **tidyr** for manipulating data,

-   **dplyr** for transforming data, and

-   **ggplot2** for visualising data
:::

Install and loading necessary packages:

```{r}
pacman::p_load(sf, tidyverse)
```

## 1.2 Importing Geospatial Data

-   `MP14_SUBZONE_WEB_PL`, a polygon feature layer in ESRI shapefile format,

-   `CyclingPath`, a line feature layer in ESRI shapefile format, and

-   `PreSchool`, a point feature layer in kml file format.

### 1.2.1 Importing polygon feature data in shapefile format

The code chunk below uses *st_read()* function of **sf** package to import `MP14_SUBZONE_WEB_PL` shapefile into R as a polygon feature data frame. Note that when the input geospatial data is in shapefile format, two arguments will be used, namely: `dsn` to define the data path and `layer` to provide the shapefile name. Also note that no extension such as .shp, .dbf, .prj and .shx are needed.

```{r}
mpsz = st_read(dsn = "data/geospatial", 
                  layer = "MP14_SUBZONE_WEB_PL")
```

The message above reveals that the geospatial objects are multipolygon features. There are a total of 323 multipolygon features and 15 fields in `mpsz` simple feature data frame. `mpsz` is in **svy21** projected coordinates systems. The bounding box provides the x extend and y extend of the data.

### 1.2.2 Importing polyline feature data in shapefile form

```{r}
cyclingpath = st_read(dsn = "data/geospatial", layer = "CyclingPathGazette")
```

### 1.2.3 Importing GIS data in kml format

```{r}
preschool = st_read("data/geospatial/PreSchoolsLocation.kml")
```

The message above reveals that `preschool` is a point feature data frame. There are a total of 2290 features and 2 fields. Different from the previous two simple feature data frame, preschool is in **wgs84** coordinates system.

## 1.3 Checking the Content of A Simple Feature Data Frame

### 1.3.1 Working with st_geometry()

The column in the sf data.frame that contains the geometries is a list of class `sfc`. We can retrieve the geometry list-column in this case by mpsz\$geom or mpsz\[\[1\]\], but the more general way uses [`st_geometry()`](https://r-spatial.github.io/sf/reference/st_geometry.html) as shown in the code chunk below.

```{r}
st_geometry(mpsz)
```

### 1.3.2 Working with glimpse()

```{r}
glimpse(mpsz)
```

`glimpse()` report reveals the data type of each fields. For example `FMEL-UPD_D` field is in **date** data type and `X_ADDR`, `Y_ADDR`, `SHAPE_L` and `SHAPE_AREA` fields are all in **double-precision values**.

### 1.3.3 Working with head()

```{r}
head(mpsz, n=5)
```

## 1.4 Plotting the Geospatial Data

```{r}
plot(mpsz)
```

The default plot of an sf object is a multi-plot of all attributes, up to a reasonable maximum as shown above. We can, however, choose to plot only the geometry by using the code chunk below.

```{r}
plot(st_geometry(mpsz))
```

Alternatively, we can also choose the plot the sf object by using a specific attribute as shown in the code chunk below.

```{r}
plot(mpsz["PLN_AREA_N"])
```

Now, let us plot the preschool layer ontop of the mpsz layer by using the code chunk below.

```{r}
plot(st_geometry(mpsz))
plot(st_geometry(preschool), 
     add = TRUE)
```

## 1.5 Working with Projection

1.5.1 Assigning EPSG code to a simple feature data frame

```{r}

#| Loading the necessary libraries



#| Read the important data sets including Shapefile of Singapore Subzone, Cycling Path and Preschool locations

mpsz = st_read(dsn = "data/geospatial", layer = "MP14_SUBZONE_WEB_PL")
cyclingpath = st_read(dsn = "data/geospatial", layer = "CyclingPathGazette")
preschool = st_read("data/geospatial/PreSchoolsLocation.kml")

#| Plotting the Geospatial Data of "Master Plan 2014 Subzone Boundary" 

st_geometry(mpsz)
glimpse(mpsz)
head(mpsz, n=5)
plot(mpsz)

```
